library(KernSmooth)
library(KernSmooth)
license()
demo()
glm.vr
help()
help(demo)
demo(lm.glm,package="stats",ask=TRUE)
quit()
f(3)
x=function(id){}
x
x=function(id){}
x=function(id){}
mean(iris[ ,'virginica'])
source('~/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(1:4,2,2))
x
x[1]
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(1:4,2,2))
x$get()
cacheSolve(x)
cacheSolve(x)
x$get()%*%cacheSolve(x)
source('~/ProgrammingAssignment2/cachematrix.R')
library(swirl)
swirl()
exit()
0
end()
library(swirl)
swirl()
2
info()
main()
head(flags)
dim(flags)
main()
install.packages("RMySQL")
getwd()
source('~/quiz2.R')
setwd("~/")
source('~/quiz2.R')
source('~/quiz2.R')
?knitr
?kable
setwd("~/coursera/Reproducible Research/RepData_PeerAssessment1")
library(dplyr)
library(ggplot2)
orig<- read.csv("activity.csv",stringsAsFactors = F)
orig$date<-as.Date(orig$date)
orig<-mutate(orig,dayofweek=weekdays(date))
o2<-group_by(orig,date) %>% summarize(Dailysum=sum(steps,na.rm=T))
hist(o2$Dailysum,col="red",xlab="Daily Total Steps Taken",
main="Daily Total Steps Taken\nOriginal Data",ylab="Frequency")
summary(o2$Dailysum)
View(orig)
View(o2)
?na.rm
?summarize
o2<-group_by(orig,date) %>% summarize(Dailysum=sum(steps,na.rm=TRUE))
View(o2)
summary(o2$Dailysum)
mean(o2$Dailysum)
median(o2$Dailysum)
o2<-group_by(orig,date) %>% summarize(Dailysum=sum(steps))
View(o2)
summary(o2$Dailysum)
o3<-group_by(orig,interval) %>% summarize(Dailymean=mean(steps,na.rm=T))
View(o3)
o3<-group_by(orig,interval) %>% summarize(Dailymean=mean(steps)
)
o3<-group_by(orig,interval) %>% summarize(Dailymean=mean(steps,na.rm=T))
sum(o3$Dailymean)
summary(o3$Dailymean)
o4<-filter(orig,is.na(steps))
o4<-xtabs(  ~ o4$interval + o4$date,data=o4)
colSums(o4)
View(o2)
o5<-merge(orig,o3)
nainx<-is.na(o5$steps)
o5[nainx,2] <-o5[nainx,5]
rev<-o5
r2<-group_by(rev,date) %>% summarize(Dailysum=sum(steps,na.rm=T))
hist(r2$Dailysum,col="red",xlab="Daily Total Steps Taken",
main="Daily Total Steps Taken\nAdjusted Data",ylab="Frequency")
summary(r2$Dailysum)
r2<-group_by(rev,date) %>% summarize(Dailysum=sum(steps,na.rm=T))
r2<-group_by(rev,date) %>% summarize(Dailysum=sum(steps))
summary(r2$Dailysum)
mean(r2$Dailysum)
View(r2)
median(r2$Dailysum)
table(r2$Dailysum)
table(summary(r2$Dailysum))
View(o2)
Dailymax<-max(o3$Dailymean)
o3[o3$Dailymean==Dailymax,]
Dailymax<-max(o3$Dailymean)
x<-o3[o3$Dailymean==Dailymax,]
x
x[1]
x[1,1]
x[2]
str(x)
